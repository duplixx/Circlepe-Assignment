{"ast":null,"code":"var _jsxFileName = \"/Users/mayank/Documents/GitHub/Circlepe-Assignment/frontend/circle-frontend/src/components/mode-toggle.tsx\",\n  _s = $RefreshSig$();\nimport { Moon, Sun } from \"lucide-react\";\nimport { useTheme } from \"@/components/theme-provider\";\nimport { Button } from \"@/components/ui/button\";\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from \"@/components/ui/dropdown-menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ModeToggle(_ref) {\n  _s();\n  let {\n    buttonProps,\n    contentProps\n  } = _ref;\n  const {\n    setTheme\n  } = useTheme();\n  return /*#__PURE__*/_jsxDEV(DropdownMenu, {\n    children: [/*#__PURE__*/_jsxDEV(DropdownMenuTrigger, {\n      asChild: true,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline\",\n        size: \"icon\",\n        ...buttonProps,\n        children: [/*#__PURE__*/_jsxDEV(Sun, {\n          className: \"h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Moon, {\n          className: \"absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sr-only\",\n          children: \"Toggle theme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DropdownMenuContent, {\n      align: \"end\",\n      ...contentProps,\n      children: [/*#__PURE__*/_jsxDEV(DropdownMenuItem, {\n        onClick: () => setTheme(\"light\"),\n        children: \"Light\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DropdownMenuItem, {\n        onClick: () => setTheme(\"dark\"),\n        children: \"Dark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DropdownMenuItem, {\n        onClick: () => setTheme(\"system\"),\n        children: \"System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(ModeToggle, \"a3u8LKbpX4CXbd+e8SJ1SuQ9KPw=\", false, function () {\n  return [useTheme];\n});\n_c = ModeToggle;\nvar _c;\n$RefreshReg$(_c, \"ModeToggle\");","map":{"version":3,"names":["Moon","Sun","useTheme","Button","DropdownMenu","DropdownMenuContent","DropdownMenuItem","DropdownMenuTrigger","jsxDEV","_jsxDEV","ModeToggle","_ref","_s","buttonProps","contentProps","setTheme","children","asChild","variant","size","className","fileName","_jsxFileName","lineNumber","columnNumber","align","onClick","_c","$RefreshReg$"],"sources":["/Users/mayank/Documents/GitHub/Circlepe-Assignment/frontend/circle-frontend/src/components/mode-toggle.tsx"],"sourcesContent":["import { Moon, Sun } from \"lucide-react\"\n\nimport { useTheme } from \"@/components/theme-provider\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n    DropdownMenu,\n    DropdownMenuContent,\n    DropdownMenuItem,\n    DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\"\nimport { ComponentProps } from \"react\"\n\nexport function ModeToggle({ buttonProps, contentProps }: { buttonProps?: ComponentProps<typeof Button>, contentProps?: ComponentProps<typeof DropdownMenuContent> }) {\n    const { setTheme } = useTheme()\n\n    return (\n        <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n                <Button variant=\"outline\" size=\"icon\" {...buttonProps}>\n                    <Sun className=\"h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0\" />\n                    <Moon className=\"absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100\" />\n                    <span className=\"sr-only\">Toggle theme</span>\n                </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\" {...contentProps}>\n                <DropdownMenuItem onClick={() => setTheme(\"light\")}>\n                    Light\n                </DropdownMenuItem>\n                <DropdownMenuItem onClick={() => setTheme(\"dark\")}>\n                    Dark\n                </DropdownMenuItem>\n                <DropdownMenuItem onClick={() => setTheme(\"system\")}>\n                    System\n                </DropdownMenuItem>\n            </DropdownMenuContent>\n        </DropdownMenu>\n    )\n}\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,GAAG,QAAQ,cAAc;AAExC,SAASC,QAAQ,QAAQ,6BAA6B;AACtD,SAASC,MAAM,QAAQ,wBAAwB;AAC/C,SACIC,YAAY,EACZC,mBAAmB,EACnBC,gBAAgB,EAChBC,mBAAmB,QAChB,+BAA+B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGtC,OAAO,SAASC,UAAUA,CAAAC,IAAA,EAA4I;EAAAC,EAAA;EAAA,IAA3I;IAAEC,WAAW;IAAEC;EAAyH,CAAC,GAAAH,IAAA;EAChK,MAAM;IAAEI;EAAS,CAAC,GAAGb,QAAQ,CAAC,CAAC;EAE/B,oBACIO,OAAA,CAACL,YAAY;IAAAY,QAAA,gBACTP,OAAA,CAACF,mBAAmB;MAACU,OAAO;MAAAD,QAAA,eACxBP,OAAA,CAACN,MAAM;QAACe,OAAO,EAAC,SAAS;QAACC,IAAI,EAAC,MAAM;QAAA,GAAKN,WAAW;QAAAG,QAAA,gBACjDP,OAAA,CAACR,GAAG;UAACmB,SAAS,EAAC;QAAsF;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxGf,OAAA,CAACT,IAAI;UAACoB,SAAS,EAAC;QAA8F;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACjHf,OAAA;UAAMW,SAAS,EAAC,SAAS;UAAAJ,QAAA,EAAC;QAAY;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC,eACtBf,OAAA,CAACJ,mBAAmB;MAACoB,KAAK,EAAC,KAAK;MAAA,GAAKX,YAAY;MAAAE,QAAA,gBAC7CP,OAAA,CAACH,gBAAgB;QAACoB,OAAO,EAAEA,CAAA,KAAMX,QAAQ,CAAC,OAAO,CAAE;QAAAC,QAAA,EAAC;MAEpD;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CAAC,eACnBf,OAAA,CAACH,gBAAgB;QAACoB,OAAO,EAAEA,CAAA,KAAMX,QAAQ,CAAC,MAAM,CAAE;QAAAC,QAAA,EAAC;MAEnD;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CAAC,eACnBf,OAAA,CAACH,gBAAgB;QAACoB,OAAO,EAAEA,CAAA,KAAMX,QAAQ,CAAC,QAAQ,CAAE;QAAAC,QAAA,EAAC;MAErD;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEvB;AAACZ,EAAA,CAzBeF,UAAU;EAAA,QACDR,QAAQ;AAAA;AAAAyB,EAAA,GADjBjB,UAAU;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}