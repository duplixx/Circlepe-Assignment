[{"/Users/mayank/Documents/GitHub/Circlepe-Assignment/frontend/circle-frontend/src/index.tsx":"1","/Users/mayank/Documents/GitHub/Circlepe-Assignment/frontend/circle-frontend/src/App.tsx":"2","/Users/mayank/Documents/GitHub/Circlepe-Assignment/frontend/circle-frontend/src/components/theme-provider.tsx":"3","/Users/mayank/Documents/GitHub/Circlepe-Assignment/frontend/circle-frontend/src/lib/utils.ts":"4","/Users/mayank/Documents/GitHub/Circlepe-Assignment/frontend/circle-frontend/src/components/mode-toggle.tsx":"5","/Users/mayank/Documents/GitHub/Circlepe-Assignment/frontend/circle-frontend/src/components/ui/button.tsx":"6","/Users/mayank/Documents/GitHub/Circlepe-Assignment/frontend/circle-frontend/src/components/ui/card.tsx":"7","/Users/mayank/Documents/GitHub/Circlepe-Assignment/frontend/circle-frontend/src/components/ui/dropdown-menu.tsx":"8","/Users/mayank/Documents/GitHub/Circlepe-Assignment/frontend/circle-frontend/src/components/register.tsx":"9","/Users/mayank/Documents/GitHub/Circlepe-Assignment/frontend/circle-frontend/src/components/login.tsx":"10","/Users/mayank/Documents/GitHub/Circlepe-Assignment/frontend/circle-frontend/src/components/dashboard.tsx":"11","/Users/mayank/Documents/GitHub/Circlepe-Assignment/frontend/circle-frontend/src/components/ui/input.tsx":"12"},{"size":376,"mtime":1725735689677,"results":"13","hashOfConfig":"14"},{"size":1879,"mtime":1725738386429,"results":"15","hashOfConfig":"14"},{"size":1730,"mtime":1725735689676,"results":"16","hashOfConfig":"14"},{"size":167,"mtime":1725735689678,"results":"17","hashOfConfig":"14"},{"size":1588,"mtime":1725735689676,"results":"18","hashOfConfig":"14"},{"size":1835,"mtime":1725735689676,"results":"19","hashOfConfig":"14"},{"size":1877,"mtime":1725735689677,"results":"20","hashOfConfig":"14"},{"size":7295,"mtime":1725735689677,"results":"21","hashOfConfig":"14"},{"size":1623,"mtime":1725737888560,"results":"22","hashOfConfig":"14"},{"size":1455,"mtime":1725737855835,"results":"23","hashOfConfig":"14"},{"size":1261,"mtime":1725737902759,"results":"24","hashOfConfig":"14"},{"size":824,"mtime":1725737984145,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dpu94e",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mayank/Documents/GitHub/Circlepe-Assignment/frontend/circle-frontend/src/index.tsx",[],[],"/Users/mayank/Documents/GitHub/Circlepe-Assignment/frontend/circle-frontend/src/App.tsx",["64"],[],"import { useState } from 'react';\nimport { ModeToggle } from './components/mode-toggle';\nimport { useTheme } from './components/theme-provider';\nimport { Button } from './components/ui/button';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from './components/ui/card';\nimport { Login } from './components/login';\nimport { Register } from './components/register';\nimport { Dashboard } from './components/dashboard';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [showRegister, setShowRegister] = useState(false);\n  const { theme } = useTheme();\n\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n  };\n\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    localStorage.removeItem('token');\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-background text-foreground\">\n      <Card className=\"w-[350px]\">\n        <CardHeader>\n          <CardTitle>{isLoggedIn ? 'Dashboard' : (showRegister ? 'Register' : 'Login')}</CardTitle>\n          <CardDescription>\n            {isLoggedIn ? 'Welcome to the Space Trade System' : 'Enter your credentials'}\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {isLoggedIn ? (\n            <Dashboard onLogout={handleLogout} />\n          ) : showRegister ? (\n            <Register onRegisterSuccess={() => setShowRegister(false)} />\n          ) : (\n            <Login onLoginSuccess={handleLogin} />\n          )}\n        </CardContent>\n        <CardFooter className=\"flex justify-between\">\n          {!isLoggedIn && (\n            <Button variant=\"outline\" onClick={() => setShowRegister(!showRegister)}>\n              {showRegister ? 'Back to Login' : 'Register'}\n            </Button>\n          )}\n          <ModeToggle />\n        </CardFooter>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;","/Users/mayank/Documents/GitHub/Circlepe-Assignment/frontend/circle-frontend/src/components/theme-provider.tsx",[],[],"/Users/mayank/Documents/GitHub/Circlepe-Assignment/frontend/circle-frontend/src/lib/utils.ts",[],[],"/Users/mayank/Documents/GitHub/Circlepe-Assignment/frontend/circle-frontend/src/components/mode-toggle.tsx",[],[],"/Users/mayank/Documents/GitHub/Circlepe-Assignment/frontend/circle-frontend/src/components/ui/button.tsx",[],[],"/Users/mayank/Documents/GitHub/Circlepe-Assignment/frontend/circle-frontend/src/components/ui/card.tsx",["65"],[],"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","/Users/mayank/Documents/GitHub/Circlepe-Assignment/frontend/circle-frontend/src/components/ui/dropdown-menu.tsx",[],[],"/Users/mayank/Documents/GitHub/Circlepe-Assignment/frontend/circle-frontend/src/components/register.tsx",[],[],"/Users/mayank/Documents/GitHub/Circlepe-Assignment/frontend/circle-frontend/src/components/login.tsx",[],[],"/Users/mayank/Documents/GitHub/Circlepe-Assignment/frontend/circle-frontend/src/components/dashboard.tsx",[],[],"/Users/mayank/Documents/GitHub/Circlepe-Assignment/frontend/circle-frontend/src/components/ui/input.tsx",[],[],{"ruleId":"66","severity":1,"message":"67","line":13,"column":11,"nodeType":"68","messageId":"69","endLine":13,"endColumn":16},{"ruleId":"70","severity":1,"message":"71","line":36,"column":3,"nodeType":"72","endLine":43,"endColumn":5},"@typescript-eslint/no-unused-vars","'theme' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement"]